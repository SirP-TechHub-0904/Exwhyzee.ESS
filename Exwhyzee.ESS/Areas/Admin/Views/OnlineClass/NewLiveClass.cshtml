@model SchoolPortal.Web.Models.Entities.OnlineZoom
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "NewLiveClass";
}

<div class="row">
    <!-- left column -->
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">New Online Class</h3>
                @if (TempData["error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["error"]
                    </div>
                }
            </div>
            @using (Html.BeginForm())
            {
                @*@Html.AntiForgeryToken()*@

        <div class="box-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                Class
                <div class="">
                    @Html.DropDownList("ClassLevelId", ViewBag.classList as SelectList, "Select a Class", new { id = "classname", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClassLevelId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                Subject
                <div class="">

                    <select id="subject" name="SubjectId" class="form-control"></select>
                </div>
            </div>


            <div class="form-group">
                <label>Class Date</label>

                <div class="input-group date">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    <input type="text" class="form-control pull-right" placeholder="DD/MM/YYYY" name="ClassDate" id="datepicker">
                </div>
                <!-- /.input group -->
            </div>

            <div class="bootstrap-timepicker">
                <div class="form-group">
                    <label>Class Time</label>

                    <div class="input-group">
                        <input type="text" name="ClassTime" class="form-control timepicker">

                        <div class="input-group-addon">
                            <i class="fa fa-clock-o"></i>
                        </div>
                    </div>
                    <!-- /.input group -->
                </div>
                <!-- /.form group -->
            </div>
            <div class="form-group">
                @Html.Label("Class Duration", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", placeholder = "IN MINUTE" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
            {
                <div class="form-group">
                    Class
                    <div class="">
                        @Html.DropDownList("UserId", ViewBag.User as SelectList, "Select a Teacher", new { id = "classname", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                string uid = User.Identity.GetUserId();
                <input type="hidden" value="@uid" name="UserId" />
            }
            <div class="form-group">
                @Html.Label("Topic Description", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <textarea class="form-control" name="Description"></textarea>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Class Password", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.ClassPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                    @Html.ValidationMessageFor(model => model.ClassPassword, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                </div>

            }
        </div>

    </div>
    <div class="col-md-3"></div>

</div>



@section Scripts2 {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/jscript">
        $(function () {
            $('#classname').change(function () {
                $.getJSON('/Staff/Panel/SubjectList/' + $('#classname').val(), function (data) {
                    var items = '<option>Select a Subject</option>';
                    $.each(data, function (i, local) {
                        items += "<option value='" + local.Value + "'>" + local.Text + "</option>";
                    });
                    console.log(data)
                    $('#subject').html(items);
                });
            });
        });
    </script>

    <script src="http://v1.exwhyzee.ng/admin/main.js"></script>

}

