@model Exwhyzee.ESS.Models.Entities.Topic

@{
    ViewBag.Title = "Edit";
}

    <div class="row">
        <!-- left column -->
        <div class="col-md-8">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">New Topic</h3>
                    </div>
                    @using (Html.BeginForm("Edit", "Topics", null, FormMethod.Post, new { id = "", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

            <div class="box-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Date)
                @Html.HiddenFor(model => model.VideoFile)
                @Html.HiddenFor(model => model.SubjectId)
                @Html.HiddenFor(model => model.UserId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", maxlength = "45" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VideoUrl, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.EditorFor(model => model.VideoUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VideoUrl, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">


                        <style>
                            video {
                                width: 100%;
                                height: auto;
                            }
                        </style>
                        <div class="">

                            <video controls autoplay loop>
                                <source src="~/Videos/@Model.VideoFile" type="video/mp4">
                            </video>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoCover, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        <input type="file" name="upload" class="form-control" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Publish, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Publish)
                    @Html.ValidationMessageFor(model => model.Publish, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Approved, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Approved)
                    @Html.ValidationMessageFor(model => model.Approved, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubjectId, "SubjectId", htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Views, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.EditorFor(model => model.Views, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Views, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
                    

                    <div class="box-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                    </div>

                    }
                </div>

            </div>
            <div class="col-md-4">
               @* @Html.Action("_Images", "DataImages")*@
            </div>

        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
