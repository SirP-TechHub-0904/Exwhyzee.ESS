@model Exwhyzee.ESS.Models.QuestionMain

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "QuestionMains", null, FormMethod.Post, new { id = "", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>QuestionMain</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Sort, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Img, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="upload" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TextQ, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TextQ, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TextQ, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
        @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label" })
        <div class="">
            @Html.EnumDropDownListFor(model => model.UserType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
        </div>
    </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.OptionA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OptionD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QuestionCategoryId, "QuestionCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("QuestionCategoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.QuestionCategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
