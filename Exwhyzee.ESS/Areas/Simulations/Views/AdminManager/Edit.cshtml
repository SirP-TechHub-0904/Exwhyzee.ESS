@model Exwhyzee.ESS.Models.Entities.SimulationCategory

@{
    ViewBag.Title = "Edit";
}
<div class="row">
    <!-- left column -->
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Edit Simulation Catogory</h3>
                @if (TempData["fail"] != null)
                {

                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["fail"]
                    </div>
                }
            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

        <div class="box-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Date)

            <div class="form-group">
                @Html.LabelFor(model => model.SimulationSubjectId, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.DropDownList("SimulationSubjectId", null, htmlAttributes: new { @class = "form-control" })             @Html.ValidationMessageFor(model => model.SimulationSubjectId, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.SimulationSubjectId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <div class="">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


        </div>
                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Edit</button>
                    <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                </div>
            }

        </div>
    </div>
</div>


