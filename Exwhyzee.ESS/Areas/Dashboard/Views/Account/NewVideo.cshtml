@model Exwhyzee.ESS.Models.Entities.Topic

@{
    ViewBag.Title = "NewVideo";
}
<div class="row">
    <!-- left column -->

    <div class="col-md-8">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">New Video (Lesson, Motivational etc)</h3><br />
                <h5 class="box-title">All video must be approved before been published.</h5>
                @if (TempData["fail"] != null)
                {

                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["fail"]
                    </div>
                }
            </div>
            @using (Html.BeginForm("NewVideo", "Account", null, FormMethod.Post, new { id = "", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

        <div class="box-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Subject", "SubjectId", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <textarea class="form-control" name="Description"></textarea>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Video", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <input type="file" name="upload" class="form-control" accept="video/*" />
                </div>
            </div>
        </div>

                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Upload</button>
                    <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                </div>

            }
        </div>

    </div>
  
</div>